{"remainingRequest":"D:\\Code\\project\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\project\\app\\src\\pages\\Search\\Search.vue?vue&type=template&id=2c77b49b&","dependencies":[{"path":"D:\\Code\\project\\app\\src\\pages\\Search\\Search.vue","mtime":1650873765754},{"path":"D:\\Code\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642509914891},{"path":"D:\\Code\\project\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1642509919737},{"path":"D:\\Code\\project\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642509914891},{"path":"D:\\Code\\project\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1642509918314}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}